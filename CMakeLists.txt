
cmake_minimum_required (VERSION 3.2 FATAL_ERROR)

enable_testing()

project(experiments)

include(${CMAKE_BINARY_DIR}/conanbuildinfo.cmake)
conan_basic_setup(TARGETS ON)

function(exp_setup_common_options target_name)
    target_include_directories("${target_name}" PRIVATE ..)
    set_property(TARGET "${target_name}"  PROPERTY CXX_STANDARD 14)
    if("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang" OR "${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU")
        target_link_libraries("${target_name}"  pthread)
    elseif("${CMAKE_CXX_COMPILER_ID}" STREQUAL "MSVC")
        target_compile_definitions("${target_name}" PRIVATE _CRT_SECURE_NO_WARNINGS _SCL_SECURE_NO_WARNINGS)
    endif()
    if(EXP_USE_BOOST_FILESYSTEM)
        set(use_boost_filesystem 1)
    else()
        set(use_boost_filesystem 0)
    endif()
    target_compile_definitions("${target_name}" PRIVATE EXP_USE_BOOST_FILESYSTEM=${use_boost_filesystem})
endfunction()

add_subdirectory("src/Algorithms")
add_subdirectory("src/BoolExprParser")
add_subdirectory("src/Circuit")
add_subdirectory("src/Concurrency")
add_subdirectory("src/coroutines")
add_subdirectory("src/DelaySubTitles")
add_subdirectory("src/DetectionIdiom")
add_subdirectory("src/error_handling")
add_subdirectory("src/ExprTemp")
add_subdirectory("src/fp_in_cpp")
add_subdirectory("src/KennyKerr")
add_subdirectory("src/recover_photos")
add_subdirectory("src/sqlgen")
add_subdirectory("src/TestIterators")
add_subdirectory("src/TestModules")
add_subdirectory("src/things")
