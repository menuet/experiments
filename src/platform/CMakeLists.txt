
add_library(platform INTERFACE)
target_sources(platform INTERFACE
    "${CMAKE_CURRENT_SOURCE_DIR}/platform.h"
    "${CMAKE_CURRENT_SOURCE_DIR}/filesystem.hpp"
    "${CMAKE_CURRENT_SOURCE_DIR}/system_error.hpp"
    "${CMAKE_CURRENT_SOURCE_DIR}/string_view.hpp"
    "${CMAKE_CURRENT_SOURCE_DIR}/variant.hpp")
target_include_directories(platform INTERFACE "${CMAKE_CURRENT_SOURCE_DIR}/..")

add_library(EXP_THIRDPARTY_STD_FILESYSTEM INTERFACE)
if(NOT ("${CMAKE_HOST_SYSTEM_NAME}" STREQUAL "Windows"))
    message("Using BOOST FILESYSTEM")
    set(EXP_USE_BOOST_FILESYSTEM 1)
    target_link_libraries(EXP_THIRDPARTY_STD_FILESYSTEM INTERFACE EXP_THIRDPARTY_BOOST_LIBS)
else()
    message("Using STD FILESYSTEM")
    set(EXP_USE_BOOST_FILESYSTEM 0)
endif()
target_compile_definitions(EXP_THIRDPARTY_STD_FILESYSTEM INTERFACE EXP_USE_BOOST_FILESYSTEM=${EXP_USE_BOOST_FILESYSTEM})

add_library(EXP_THIRDPARTY_STD_VARIANT INTERFACE)
if(NOT ("${CMAKE_HOST_SYSTEM_NAME}" STREQUAL "Windows"))
    message("Using BOOST VARIANT")
    set(EXP_USE_BOOST_VARIANT 1)
    target_link_libraries(EXP_THIRDPARTY_STD_VARIANT INTERFACE EXP_THIRDPARTY_BOOST_LIBS)
else()
    message("Using STD VARIANT")
    set(EXP_USE_BOOST_VARIANT 0)
endif()
target_compile_definitions(EXP_THIRDPARTY_STD_VARIANT INTERFACE EXP_USE_BOOST_VARIANT=${EXP_USE_BOOST_VARIANT})

add_library(EXP_THIRDPARTY_STD_STRING_VIEW INTERFACE)
if(NOT ("${CMAKE_HOST_SYSTEM_NAME}" STREQUAL "Windows"))
    message("Using BOOST STRING_VIEW")
    set(EXP_USE_BOOST_STRING_VIEW 1)
    target_link_libraries(EXP_THIRDPARTY_STD_STRING_VIEW INTERFACE EXP_THIRDPARTY_BOOST_LIBS)
else()
    message("Using STD STRING_VIEW")
    set(EXP_USE_BOOST_STRING_VIEW 0)
endif()
target_compile_definitions(EXP_THIRDPARTY_STD_STRING_VIEW INTERFACE EXP_USE_BOOST_STRING_VIEW=${EXP_USE_BOOST_STRING_VIEW})
